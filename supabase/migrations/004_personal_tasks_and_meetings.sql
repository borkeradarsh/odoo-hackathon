-- Add support for personal tasks (tasks with no project_id)

-- Add policies for personal tasks
CREATE POLICY "Users can view their own personal tasks" ON tasks
  FOR SELECT USING (project_id IS NULL AND created_by = auth.uid());

CREATE POLICY "Users can create personal tasks" ON tasks
  FOR INSERT WITH CHECK (project_id IS NULL AND created_by = auth.uid());

CREATE POLICY "Users can update their own personal tasks" ON tasks
  FOR UPDATE USING (project_id IS NULL AND created_by = auth.uid());

CREATE POLICY "Users can delete their own personal tasks" ON tasks
  FOR DELETE USING (project_id IS NULL AND created_by = auth.uid());

-- Create meetings table for calendar functionality
CREATE TABLE IF NOT EXISTS meetings (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  description TEXT,
  start_time TIMESTAMP WITH TIME ZONE NOT NULL,
  end_time TIMESTAMP WITH TIME ZONE NOT NULL,
  project_id BIGINT REFERENCES projects(id) ON DELETE CASCADE,
  created_by UUID REFERENCES auth.users(id) ON DELETE CASCADE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Enable RLS for meetings
ALTER TABLE meetings ENABLE ROW LEVEL SECURITY;

-- RLS Policies for meetings table
CREATE POLICY "Users can view meetings for projects they are members of" ON meetings
  FOR SELECT USING (
    project_id IS NULL AND created_by = auth.uid() OR
    auth.uid() IN (
      SELECT user_id FROM project_members WHERE project_id = meetings.project_id
    ) OR
    auth.uid() IN (
      SELECT created_by FROM projects WHERE id = meetings.project_id
    )
  );

CREATE POLICY "Users can create meetings" ON meetings
  FOR INSERT WITH CHECK (
    project_id IS NULL AND created_by = auth.uid() OR
    auth.uid() IN (
      SELECT user_id FROM project_members WHERE project_id = meetings.project_id
    ) OR
    auth.uid() IN (
      SELECT created_by FROM projects WHERE id = meetings.project_id
    )
  );

CREATE POLICY "Users can update meetings they created" ON meetings
  FOR UPDATE USING (created_by = auth.uid());

CREATE POLICY "Users can delete meetings they created" ON meetings
  FOR DELETE USING (created_by = auth.uid());

-- Enable Realtime for meetings
ALTER PUBLICATION supabase_realtime ADD TABLE meetings;

-- Create indexes for meetings
CREATE INDEX IF NOT EXISTS idx_meetings_project_id ON meetings(project_id);
CREATE INDEX IF NOT EXISTS idx_meetings_created_by ON meetings(created_by);
CREATE INDEX IF NOT EXISTS idx_meetings_start_time ON meetings(start_time);
